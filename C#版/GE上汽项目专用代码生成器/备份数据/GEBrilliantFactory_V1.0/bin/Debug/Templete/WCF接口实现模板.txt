using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Data;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Activation;
using WIP_BLL;
using WIP_common;
using WIP_common.Models;
using WIP_Models;

namespace $Wcf_NameSpacePath$
{
    [ServiceBehavior(InstanceContextMode = InstanceContextMode.PerCall)]
    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]
    [KnownType(typeof(TestModel))]
    public class $Modulelogo$Service : I$Modulelogo$Service
    {
        private $FilePrefixName$BLL bll = new $FilePrefixName$BLL();

        #region 插入$ChinaComment$

        /// <summary>
        /// 插入$ChinaComment$
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        public ReturnBody<string> Insert$Modulelogo$($EntityName$ model)
        {
            ReturnBody<string> retBody = null;
            try
            {
                #region 验证
                if (model == null)
                {
                    retBody = Common.GetReturnBody<string>(ResCode.PARAMETERNOEMPTY, "$ChinaComment$不能为空");
                    return retBody;
                }
                $ValidateEmpty$
                ValidateResModel res = ValidateData.ValidateNullOrEmpty<$EntityName$>(columnsList, model);
                if (res != null && !res.IsValidate)
                {
                    retBody = Common.GetReturnBody<string>(ResCode.PARAMETERNOEMPTY, res.ValidateMsg);
                    return retBody;
                }
                //验证重复
                if (bll.Exists(model.$PrimaryKey$))
                {
                    retBody = Common.GetReturnBody<string>(ResCode.FAILURE, "数据已经存在");
                    return retBody;
                }
                #endregion

                model.delFlag = false;
                model.createTime = model.lastModifyTime = DateTime.Now;

                if (bll.Add(model)>0)
                {
                    retBody = Common.GetReturnBody<string>(ResCode.SUCCESS, ResMsg.SUCCESS);
                }
                else
                {//失败
                    retBody = Common.GetReturnBody<string>(ResCode.FAILURE, "保存数据失败");
                }
                return retBody;
            }
            catch (Exception ex)
            {
                retBody = Common.GetReturnBody<string>(ResCode.FAILURE, "失败,失败原因：" + JsonConvert.SerializeObject(ex));
                return retBody;
            }
        }
        public string Insert$Modulelogo$0($EntityName$ model)
        {
            return "OK";
        }

        #endregion

        #region 更新$ChinaComment$

        /// <summary>
        /// 更新$ChinaComment$
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        public ReturnBody<string> Update$Modulelogo$($EntityName$ model)
        {
            ReturnBody<string> retBody = null;
            try
            {
                #region 验证
                if (model == null)
                {
                    retBody = Common.GetReturnBody<string>(ResCode.PARAMETERNOEMPTY, "$ChinaComment$不能为空");
                    return retBody;
                }
                $ValidateEmpty$
                ValidateResModel res = ValidateData.ValidateNullOrEmpty<$EntityName$>(columnsList, model);
                if (res != null && !res.IsValidate)
                {
                    retBody = Common.GetReturnBody<string>(ResCode.PARAMETERNOEMPTY, res.ValidateMsg);
                    return retBody;
                }
                #endregion

                List<PropertyParam> list = new List<PropertyParam>() {
                           new PropertyParam(){ PropertyName="quantity",ObjectValue=model.quantity,dbType=SqlDbType.Int,size=4},
                            new PropertyParam(){ PropertyName="heatingNumber",ObjectValue=model.heatingNumber,dbType=SqlDbType.NVarChar,size=50},

                            new PropertyParam(){ IsWhereFilter=true,PropertyName="$PrimaryKey$",ObjectValue=model.$PrimaryKey$,dbType=SqlDbType.NVarChar,size=50}
                        };
                bool result = DALCommon.UpdateExtend(list, "udtWip_$Modulelogo$Info");
                if (result)
                {
                    retBody = Common.GetReturnBody<string>(ResCode.SUCCESS, "");
                }
                else
                {
                    retBody = Common.GetReturnBody<string>(ResCode.FAILURE, "更新数据失败,更新的条数为0");
                }
                return retBody;
            }
            catch (Exception ex)
            {
                retBody = Common.GetReturnBody<string>(ResCode.FAILURE, "失败,失败原因：" + JsonConvert.SerializeObject(ex));
                return retBody;
            }
        }
        public string Update$Modulelogo$0($EntityName$ model)
        {
            return "OK";
        }

        #endregion

        #region 获取$ChinaComment$列表（分页）

        /// <summary>
        /// 获取$ChinaComment$列表（分页）
        /// </summary>
        /// <returns></returns>
        public ReturnBody<WIP_common.PageResultModel<$EntityName$>> Get$Modulelogo$List(Query$Modulelogo$Model queryModel)
        {
            var strOrderBy = " $TableAlias$.lastModifyTime DESC";
            var strWhere = "";
            if (queryModel != null)
            {
                $WhereQuery$
            }
            WIP_common.PageResultModel<$EntityName$> list = bll.GetModelListForPage(strOrderBy, strWhere, queryModel);
            return Common.GetReturnBody<PageResultModel<$EntityName$>>(ResCode.SUCCESS, ResMsg.SUCCESS, list);
        }
        public string Get$Modulelogo$List0()
        {
            return "OK";
        }

        #endregion

        #region 获取单个$ChinaComment$


        /// <summary>
        /// 获取单个$ChinaComment$
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        public ReturnBody<$EntityName$> GetSingle$Modulelogo$(Query$Modulelogo$Model model)
        {
            try
            {
                #region 验证
                if (model == null || string.IsNullOrEmpty(model.$PrimaryKey$))
                {
                    return Common.GetReturnBody<$EntityName$>(ResCode.PARAMETERNOEMPTY, "$PrimaryKeyName$不能为空");
                }
                #endregion
                var retModel = bll.GetModel(model.$PrimaryKey$);
                if (retModel == null)
                {
                    return Common.GetReturnBody<$EntityName$>(ResCode.FAILURE, "没有找到$ChinaComment$");
                }
                return Common.GetReturnBody<$EntityName$>(ResCode.SUCCESS, ResMsg.SUCCESS, retModel);
            }
            catch (Exception ex)
            {
                return Common.GetReturnBody<$EntityName$>(ResCode.FAILURE, "出现错误：" + ex.Message);
            }
        }


        public string GetSingle$Modulelogo$0(Query$Modulelogo$Model model)
        {
            return "ok";
        }


        #endregion
    }
}
